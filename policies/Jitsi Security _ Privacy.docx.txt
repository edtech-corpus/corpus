Jitsi Meet Security & Privacy

For us Fellow Jitsters, developing a platform our users can rely on is the most important thing. That means, amongst other things, we are very mindful of the security and privacy aspects that affect our users.

Security and privacy are very broad topics so we are going to try and go through some practical use cases to demonstrate what‚Äôs at play.

Fully secure you say‚Ä¶ What does this mean exactly?

In many respects Jitsi meetings are simply private by design. To begin with, all meeting rooms are ephemeral: they only exist while the meeting is actually taking place. They get created when the first participant joins and they are destroyed when the last one leaves. If someone joins the same room again, a brand new meeting is created with the same name and there is no connection to any previous meeting that might have been held with the same name. 

This is all very important. Some of the systems that let people ‚Äúpre-create‚Äù rooms, have subtle indications that let a potential attacker distinguish reserved from unreserved meetings which then makes the reserved meetings easier to identify and target.

That said, since a name is all that one needs to actually access a room, we have to be really careful about how we choose and advertise them. We don‚Äôt want others accidentally stumbling into our meetings, just as we want to keep pranksters and snoopers away.

This is generally not much of a problem for small size deployments (remember you can host your own Jitsi Meet) or low profile meetings but it may be a problem if you are using a large and public deployment such as meet.jit.si or if there is significant interest in your meeting.

One has to really keep in mind that the name of a meeting is sensitive and needs to be protected. You shouldn‚Äôt send it to anyone you do not want in your meeting. Advertising this name publicly, for example on social media, is something you should only ever do if you truly are comfortable with maximum exposure and the possibility of unwelcome visitors.

Then there‚Äôs the matter of choosing the name. If you start a meeting with the name ‚ÄúTest‚Äù, ‚ÄúYoga‚Äù or ‚ÄúFamilyMeeting‚Äù for example, chances of having some random uninvited people joining are very, very high. How does one pick a good room name then? Our random meeting name generator is a great start. It offers names that are easy to remember and read out loud on a phone call, and come from a set of over a trillion possible combinations. Picking out one of the auto-generated names is therefore quite safe.

If you don‚Äôt like the funky way the auto-generated names sound and you don‚Äôt want to use a long and uninviting UUID (which you totally could), then go ahead and pick a name by yourself but make sure it is long enough. For example, next time you‚Äôd like to have a coffee with someone over video, rather than going for meet.jit.si/coffee, try something with more of a twist.



We are also working on a ‚Äúbad meeting name detector‚Äù. You‚Äôll see a warning if your meeting name has a high chance of collision, so stay tuned!

We also give people the option to set a meeting password. A few important things to keep in mind: if you do set a password, it is your responsibility to communicate it to your peers. 



More importantly, keep in mind that your password, just as chat and speaker stats, will be reset once the last person leaves the room. So you have to make sure that you set the password again, if you find yourself ending the meeting and then rejoining. 

A similar approach you might consider would be to append a random character sequence at the end of your room name.

Anyone can mute or kick me out of my meeting, what‚Äôs up with that?

Jitsi models its meetings after in-person gatherings. Take the case of 10 people having a discussion in a room. You wouldn‚Äôt expect one person to have exclusive  ‚Äúkick‚Äù and ‚Äúmute‚Äù privileges in an in-person meeting and yet, those meetings usually go fine.

In the vast majority of cases, moderation controls in online meetings serve a different purpose: they help address tech related issues, such as people not realizing their microphones are introducing noise, or people forgetting to leave. Moderation controls help you solve those, so that people can continue their conversation. And now, with that in mind, why wouldn‚Äôt you want to enable anyone in the meeting to help solve these kinds of issues? 

For that reason our moderation controls are soft, and for everyone.

This is specifically the case on meet.jit.si, since all users are moderators.  

If you really, really, really need moderation controls to be limited then consider deploying your own Jitsi Meet instance and configuring it in a way that suits your needs. Once you do, you can configure strong authentication, so only authorised users will be moderators.

We understand the settings in meet.jit.si are not for everyone, so if you‚Äôd rather have your own private setup (which we encourage you to do!) you can get started quickly with our Docker setup or the quick-install guide. We‚Äôll be happy to help you in our community.

Are my meetings encrypted? Is encryption end-to-end?

This is something we get asked a lot, so let‚Äôs dive into the details:

Jitsi meetings can operate in 2 ways: peer-to-peer (P2P) or via the Jitsi Videobridge (JVB). This is transparent to the user. P2P mode is only used for 1-to-1 meetings. In this case, audio and video are encrypted using DTLS-SRTP all the way from the sender to the receiver, even if they traverse network components like TURN servers. 

In the case of multiparty meetings all audio and video traffic is still encrypted on the network (again, using DTLS-SRTP). Packets are decrypted while traversing Jitsi Videobridge; however they are never stored to any persistent storage and only live in memory while being routed to other participants in the meeting.

Note: Since Jitsi is built on top of WebRTC, a deeper look into its security architecture is very important when evaluating Jitsi‚Äôs security aspects.

So, why is the media decrypted in Jitsi Videobridge? Currently there is no way to do without this in WebRTC.  

Some services try to achieve this by establishing a full mesh of peer-to-peer connections between participants but that presents significant issues.

From a scalability perspective, this is a very limited approach as utilization of CPU and bandwidth grows quadratically to the number of participants thus quickly resulting in a very degraded user experience. This is the very reason why services like Jitsi Meet resort to using video routers (a.k.a., Selective Forwarding Units (SFUs)) like Jitsi Videobridge. With SFUs, clients establish a single connection with the video router and all data goes there. That saves a ton from a resource utilization point of view, but it complicates the encryption situation. At the moment WebRTC has no way to negotiate multi-party encryption over a single connection. Every client sets up a separate crypto context with the video router, which then has to trans-crypt the data as it relays it from one client to another. 

Not all hope is lost though! The folks from the WebRTC team are working on providing the necessary APIs in the browser so applications can add an additional layer of encryption that would allow apps to add an end-to-end encryption layer while still allowing SFUs to function. You can bet we will be all over this as soon as possible.

IMPORTANT EDIT (April 22, 2020): Thanks to the insertable stream API, that recently landed in Chrome Canary,  Jitsi Meet is now able to manipulate encoded packets before sending them on the network, and as a result we have been able to launch our new efforts on end-to-end encryption. Check out the demo and our next steps here:

https://jitsi.org/e2ee

What do you do with my data?

To begin with, by default Jitsi Meet does not require users to create accounts. Any information they choose to enter, such as their name or email address is purely optional and is only shared with other meeting participants.  We do not retain this information after the meeting. 

Other pieces of data such as the chat, or speaker stats, for example, are stored for the duration of the meeting and then destroyed when it ends. 

Obviously many of these things can be customized by the configuration of the actual deployment that you are using so we are going to talk about the one we maintain: meet.jit.si 

We preserve all of the above defaults but you should absolutely also check out the meet.jit.si Privacy Policy and Terms of Service.

Recordings are a bit of an interesting case. They are kept on our servers until we can upload them to the place you indicated (currently Dropbox). If we haven‚Äôt managed to do that in 24 hours we still delete them and they are gone forever (so make sure you have enough space in your Dropbox folders üòâ )

Do you use analytics?

Jitsi Meet does not come with any preconfigured analytics engines. 

We do use analytics on meet.jit.si, so let‚Äôs talk about it.

We are very committed to privacy and security and we are extremely careful about what information reaches the analytics engines we use. That said we also want to provide our users with a great product experience, so we need some visibility into what‚Äôs actually going on. We are currently using Amplitude, Datadog and Crashlytics to cover various aspects of the apps and the infrastructure on meet.jit.si. Things that we track in analytics include, an anonymous identifier (you can run in ‚Äúincognito‚Äù mode if this bothers you), bitrate, available bandwidth, SDP offers and answers, product utilization events, mobile app crash dumps  (how much various product features are used overall).

Most importantly, once your meeting is over we do not retain any  names, e-mail addresses or profile pictures (as we mentioned above, those are only transmitted to the other participants in the meeting).

While we hope that the meet.jit.si configuration will be satisfactory to most users, we completely understand that it will be incompatible with what some others are looking for. If, for any reason, this is the case for you please remember that you could be running your private Jitsi Meet instance in as little 15 minutes!
